//
//
// Tencent is pleased to support the open source community by making tRPC available.
//
// Copyright (C) 2023 THL A29 Limited, a Tencent company.
// All rights reserved.
//
// If you have downloaded a copy of the tRPC source code from Tencent,
// please note that tRPC source code is licensed under the  Apache 2.0 License,
// A copy of the Apache 2.0 License is included in this file.
//
//

// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbstest

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type HelloReq struct {
	_tab flatbuffers.Table
}

func GetRootAsHelloReq(buf []byte, offset flatbuffers.UOffsetT) *HelloReq {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &HelloReq{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsHelloReq(buf []byte, offset flatbuffers.UOffsetT) *HelloReq {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &HelloReq{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *HelloReq) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *HelloReq) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *HelloReq) Message() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func HelloReqStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func HelloReqAddMessage(builder *flatbuffers.Builder, message flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(message), 0)
}
func HelloReqEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
